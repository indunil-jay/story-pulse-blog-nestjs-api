import {
  Column,
  CreateDateColumn,
  Entity,
  OneToMany,
  PrimaryGeneratedColumn,
  UpdateDateColumn,
} from 'typeorm';
import { UserRole } from './enums/users.roles.enum';
import { Post } from 'src/posts/post.entity';
import { Exclude } from 'class-transformer';

/**
 * The `User` entity represents a user in the application.
 * It contains information about the user, including personal details,
 * authentication information, and relationships to other entities (like posts).
 */
@Entity()
export class User {
  /**
   * The unique identifier for the user.
   * This is automatically generated by the database.
   */
  @PrimaryGeneratedColumn()
  id: number;

  /**
   * The user's first name.
   * This field is mandatory and cannot be null.
   */
  @Column({
    type: 'varchar',
    length: 20,
    nullable: false,
  })
  firstName: string;

  /**
   * The user's last name.
   * This field is optional and can be null.
   */
  @Column({
    type: 'varchar',
    length: 20,
    nullable: true,
  })
  lastName?: string;

  /**
   * The user's email address.
   * This field is mandatory and cannot be null.
   * It should be unique to each user.
   */
  @Column({
    type: 'varchar',
    length: 64,
    nullable: false,
  })
  email: string;

  /**
   * The user's password.
   * This field is excluded from transformation (e.g., when sending responses).
   * It is optional and can be null, especially when using third-party auth providers (like Google).
   */
  @Column({
    type: 'varchar',
    nullable: true,
  })
  @Exclude()
  password?: string; // edited for Google auth

  /**
   * The user's Google ID, used for authentication with Google.
   * This field is excluded from transformation.
   * It is optional and can be null.
   */
  @Column({
    type: 'varchar',
    nullable: true,
  })
  @Exclude()
  googleId?: string;

  /**
   * The user's date of birth.
   * This field is optional and can be null.
   */
  @Column({
    type: 'timestamp',
  })
  dataOfBirth?: Date;

  /**
   * The role of the user within the application.
   * This determines the user's permissions and access levels.
   * Defaults to 'USER' if not explicitly set.
   */
  @Column({
    type: 'enum',
    enum: UserRole,
    default: UserRole.USER,
  })
  role: UserRole;

  /**
   * A brief biography of the user.
   * This field is optional and can be null.
   */
  @Column({ type: 'varchar', length: 256, nullable: true })
  bio?: string;

  /**
   * The URL of the user's profile image.
   * This field is optional and can be null.
   */
  @Column({ type: 'varchar', length: 1024, nullable: true })
  profileImage?: string;

  @Column({ type: 'varchar', length: 1024, nullable: true })
  resetToken?: string;

  @Column({ type: 'timestamp', nullable: true })
  expiredAt?: Date;

  @CreateDateColumn()
  createdAt?: Date;

  @UpdateDateColumn()
  updatedAt?: Date;

  /**
   * A one-to-many relationship with the `Post` entity.
   * This indicates that a user can author multiple posts.
   */
  @OneToMany(() => Post, (post) => post.author)
  posts: Post[];
}
